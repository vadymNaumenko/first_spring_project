db:
  username: ${username.value:postgres}
  password: root
  driver: PostgresDriver
  url: jdbc:postgresql://localhost:5432/spring_db
  hosts: localhost,127.0.0.1
  properties:
    first: 123
    second: 567
    third.value: Third
  pool:
    size: 12
    timeout: 10
  pools:
    - size: 1
      timeout: 1
    - size: 2
      timeout: 2
    - size: 3
      timeout: 3

spring.profiles.active: qa
spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/spring_db
    username: postgres
    password: root
    driver-class-name: org.postgresql.Driver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        hbm2ddl.auto: validate

  #logging:
#    level:
#      root: WARN
#      com.spring.project.database.pool.ConnectionPool : INFO

  # ===============================
  # = DATA SOURCE
  # ===============================
  # Set here configurations for the database connection
  #spring.datasource.url=jdbc:postgresql://localhost:5432/springbootdb
  #spring.datasource.username=postgres
  #spring.datasource.password=postgres@123
  #spring.datasource.driver-class-name=org.postgresql.Driver
  ## Keep the connection alive if idle for a long time (needed in production)
  #spring.datasource.testWhileIdle=true
  #spring.datasource.validationQuery=SELECT 1
  ## ===============================
  ## = JPA / HIBERNATE
  ## ===============================
  ## Show or not log for each sql query
  #spring.jpa.show-sql=true
  ## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
  ## schema will be automatically created afresh for every start of application
  #spring.jpa.hibernate.ddl-auto=create-drop
  #
  ## Naming strategy
  ##spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
  ##spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
  #
  ## Allows Hibernate to generate SQL optimized for a particular DBMS
  #spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
